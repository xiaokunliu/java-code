<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
		PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 加载属性文件 -->
	<properties resource="db.properties">
		<!--properties中还可以配置一些属性名和属性值  -->
		<!-- <property name="jdbc.driver" value=""/> -->
	</properties>

	<!-- 全局配置参数，需要时再设置 -->
	<!-- <settings>

	</settings> -->
	<settings>
		<!--  配置延迟加载：
					lazyLoadingEnabled
					aggressiveLazyLoading
		-->
		<setting name="lazyLoadingEnabled" value="true"/>
		<setting name="aggressiveLazyLoading" value="false"/>

		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>

	<!-- 别名定义 -->
	<typeAliases>
		
		<!-- 针对单个别名定义
		type：类型的路径
		alias：别名
		 -->
		<!--<typeAlias type="com.study.mybatis.po.Vendor" alias="vend"/>-->


		<!-- 批量别名定义 
		指定包名，mybatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大写或小写都可以）
		-->
		<package name="com.study.mybatis.po"/>

	</typeAliases>
	
	<!-- 和spring整合后 environments配置将废除-->
	<environments default="development">
		<environment id="development">
		<!-- 使用jdbc事务管理，事务控制由mybatis-->
			<transactionManager type="JDBC" />
		<!-- 数据库连接池，由mybatis管理-->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.mysql.driver}" />
				<property name="url" value="${jdbc.mysql.url}" />
				<property name="username" value="${jdbc.mysql.username}" />
				<property name="password" value="${jdbc.mysql.password}" />
			</dataSource>
		</environment>
	</environments>

	<!-- 加载 映射文件 -->
	<mappers>
		<!-- sql mapper 配置 -->
		<!--<mapper resource="mybatis/sqlmap/vend.xml"/>-->

		<!-- 使用Mapper代理的配置 -->
		<!-- 配置单个 -->
		<!--通过resource方法一次加载一个映射文件 -->
		<!--<mapper resource="mybatis/mapper/VendMapper.xml"/>
		<mapper resource="mybatis/mapper/ProductMapper.xml"/>-->

		<!-- 通过mapper接口加载单个 映射文件
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<!--<mapper class="com.study.mybatis.mapperdao.VendMapper"/>-->
		<!--<mapper class="com.study.mybatis.mapperdao.ProductMapper"/>-->


		<!-- 批量加载mapper
		指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<!-- 配置多个 -->
		<!--<package name="com.study.mybatis.mapperdao"/>
		<package name="com.study.mybatis_order"/>-->
	</mappers>
	
</configuration>
